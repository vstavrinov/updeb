#!/bin/bash

# Non-interactive upgrade debian system.

exec -a updeb < /dev/null

VERSION=1.0.1

set +x +v 

HELP="
NAME
       updeb - Non-interactive UPgrade DEBian system

SYNOPSIS
       updeb [ -ursmdvVh ] [ -c CONFIG ] [ -t MAILTO ]

DESCRIPTION
       Non-interactivly upgrade running debian system, output
       and/or mail report, update list of packages versions.

OPTIONS
       -u     Upgrade debian system

       -r     Debian upgrade report

       -m     Mail upgrade report

       -s     update list of packages versions.

       -c CONFIG
              Set the configuration file.

       -t MAILTO
              E-mail report send to

       -V     Output updeb version

       -v     Verbose mode.

       -d     Debug mode.

       -h     Help
"
[ $# -eq 0 ] && echo "$HELP" && exit

UPGRADE=false
REPORT=false
SEND=false
UPDATE=false
DEBUG=false

postupgrade () { :; }
preupgrade () { :; }
CONFIG=${CONFIG:=/etc/updeb/updebrc}
[ -f "$CONFIG" ] && . $CONFIG

OPTERR=0
while getopts c:t:ursmdvVh opt; do
   case $opt in
      c)
        CONFIG=$OPTARG
        [ -f "$CONFIG" ] && . $CONFIG
        ;;
      t)
        MAILTO=$OPTARG
        ;;
      u)
        UPGRADE=true
	;;
      r)
        REPORT=true
	;;
      s)
        UPDATE=true
	;;
      m)
        SEND=true
	;;
      v)
        VERBOSE="-V -q=1"
	;;
      d)
        set -x -v
	DEBUG=true
	;;
      V)
        echo "
	updeb $VERSION
	(C) Vladimir Stavrinov vstavrinov@gmail.com
	"
	exit
	;;
      h|*)
        echo "$HELP"
	exit
	;;
   esac
done

shift  $[$OPTIND - 1]
OPTION=${1+$@}

PRE="/usr/sbin/dpkg-preconfigure --apt -fNoninteractive || true"

DPKG="
-o Dpkg::Options::=--force-confdef
-o Dpkg::Options::=--force-confold
-o DPkg::Pre-Install-Pkgs::="


VERBOSE="${VERBOSE:="-V -q=1"}"
DIST=${DIST:=dist-upgrade}
AUTOREMOVE=${AUTOREMOVE:="false"}
CLEAN=${CLEAN:=autoclean}
LOG=${LOG:=/var/log/updeb.log}
SNAPSHOT=${SNAPSHOT:=/var/lib/updeb/snapshot}
DEBIAN_FRONTEND=noninteractive
APT=${APT:=aptitude}

#export DPKG PRE VERBOSE DIST CLEAN LOG SNAPSHOT DIFF DEBIAN_FRONTEND
export DEBIAN_FRONTEND
export UCF_FORCE_CONFFOLD=1

snapshot ()
{
      dpkg-query -W  --showformat="\${Package;}\t\${Version;}\t\${Status;-10}\n" |
      grep "install ok"
}

get_diff ()
{
	[ -z "$DIFF" ] && 
	DIFF="$(snapshot | sdiff -s $SNAPSHOT - |
	awk '
	{
	  if ($5 == "|") 
	    printf "%-28s %-26s %-26s\n",$1,$2,$7; 
	  if ($5 == "<") 
	    printf "%-28s %-26s %-26s\n",$1,$2,"removed"; 
	  if ($1 == ">") 
	    printf "%-28s %-26s %-26s\n",$2,"installed",$3
	}')"
}

report ()
{
   get_diff  
   [ -z "$DIFF" ] && exit
   echo "
	   DEBIAN UPGRADE REPORT

	   SINCE    $(date -r $SNAPSHOT)
	   TILL     $(date)
   "
   printf %-28s%-26s%-26s PACKAGE "OLD VERSION" "NEW VERSION"
   echo '
_______________________________________________________________________________
   '
   echo "$DIFF"
}

dupgrade ()
{
      $APT -q update &&
      $APT $PARAMETERS $VERBOSE -d -y $DIST &&
      $APT $PARAMETERS $VERBOSE -d -y install $INSTALL &&
      $APT $DPKG"$PRE" $PARAMETERS $VERBOSE -y $DIST &&
      $APT $DPKG"$PRE" $PARAMETERS $VERBOSE -y install $INSTALL &&
      dpkg -D1 --force-confdef --force-confold --configure -a
      RETURN=$?
      $DEBUG || set +x
      if [ $RETURN -eq 0 ]; then
	      $AUTOREMOVE && $APT -y autoremove
	      get_diff
      fi
      return $RETURN
}

$UPGRADE &&
{  
   echo -e "\\n\\t---=== START  $(date) ===---\\n"
   preupgrade
   $APT $VERBOSE -y $CLEAN 
   {
     dupgrade ||
     {
       set -x
       $APT -y -f install
       dpkg -D1 --force-confdef --force-confold --configure -a
       dupgrade
     }
   } ||
   { 

       $SEND &&
       tail -20 $LOG |
       mail -s "Debian upgrade ERROR for $(date +%F) at $HOSTNAME" $MAILTO
       postupgrade
       echo -e "\\n\\t---=== FINISH with errors (exit status $RETURN) $(date) ===---\\n"
       exit
   }
} >> $LOG 2>&1

{ $REPORT || $SEND || $UPGRADE; } &&
{
   [ -f $SNAPSHOT ] ||
      { 
	 echo "Snapshot $SNAPSHOT doesn't exist, exiting."
	 $UPGRADE && postupgrade >> $LOG
	 exit
      }
      get_diff
}

get_diff
[ -n "$DIFF" ] && $UPGRADE

$REPORT && report

$SEND && [ -n "$DIFF" ] && report |
mail -s "Debian upgrade report for $(date +%F) at $HOSTNAME" $MAILTO

{ $UPDATE && { ! $UPGRADE || { $SEND && [ -n "$DIFF" ] ; } } } &&
{
   [ -d "$(dirname $SNAPSHOT)" ] ||
   mkdir -p $(dirname $SNAPSHOT)
   snapshot > $SNAPSHOT
} 

$UPGRADE && 
{
   postupgrade
   echo "
	---=== FINISH  $(date) ===---
	"
} >> $LOG 2>&1
exit 0
